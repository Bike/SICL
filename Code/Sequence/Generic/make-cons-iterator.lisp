(cl:in-package #:sicl-sequence)

(declaim (inline make-cons-iterator))
(defun make-cons-iterator (list start end terminate)
  (declare (list list))
  (declare (function terminate))
  (multiple-value-bind (start end)
      (canonicalize-start-and-end list start end)
    (let ((rest (skip-to-start list start))
          (index start))
      (lambda ()
        (if (= index end)
            (funcall terminate (- index start))
            (prog1 (the cons rest)
              (pop rest)
              (incf index)))))))
