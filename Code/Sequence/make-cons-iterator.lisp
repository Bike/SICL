(cl:in-package #:sicl-sequence)

(declaim (inline make-cons-iterator))
(defun make-cons-iterator (list start end terminate)
  (declare (list list))
  (declare (function terminate))
  (with-list-start-and-end (start end) (list start end)
    (values
     (let ((rest (nthcdr start list))
           (index start))
       (lambda ()
         (if (= index end)
             (funcall terminate)
             (prog1 (the cons rest)
               (pop rest)
               (incf index)))))
     (- end start))))
