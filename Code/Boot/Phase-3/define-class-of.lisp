(cl:in-package #:sicl-boot-phase-3)

(defun define-class-of (e3)
    (setf (sicl-genv:fdefinition 'class-of e3)
          (lambda (object)
            (let ((result (cond ((typep object 'sicl-boot::header)
                                 (slot-value object 'sicl-boot::%class))
                                ((consp object)
                                 (sicl-genv:find-class 'cons e3))
                                ((null object)
                                 (sicl-genv:find-class 'null e3))
                                ((symbolp object)
                                 (sicl-genv:find-class 'symbol e3))
                                ((integerp object)
                                 (sicl-genv:find-class 'fixnum e3))
                                ((streamp object)
                                 (sicl-genv:find-class 't e3))
                                (t
                                 (class-of object)))))
              result))))
