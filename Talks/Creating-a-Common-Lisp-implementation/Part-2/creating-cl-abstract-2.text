In this series of presentations, we examine different strategies for
creating a Common Lisp implementation, as well as the pros and cons of
each strategy.

We assume basic knowledge about how a typical modern operating system
(such as Unix) works, and how traditional batch languages (such as C)
are compiled and executed on such a system.  We furthermore assume
medium-level knowledge about Common Lisp.

In part 2, we sketch a possible compiler that generates byte codes,
and an abstract machine for interpreting such byte codes.
